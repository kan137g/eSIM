plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
//    id 'kotlin-android-extensions'
    id 'kotlin-kapt'
    id 'kotlin-parcelize'
    id 'maven-publish'
}
android {
    compileSdk 32

    defaultConfig {
        applicationId "com.akq.esim"
        minSdk 24
        targetSdk 32
        versionCode 1
        versionName "1.0.8.2"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    signingConfigs {
        release {
            storeFile file('../demo.jks')
            keyAlias 'linksfield'
            keyPassword 'linksfield'
            storePassword 'linksfield'
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    buildFeatures {
        viewBinding true
    }
}


def roomVersion = '2.4.2'
def grpcVersion = '1.63.2'

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.aar'])
    implementation files('libs/droidlib-release.aar')


    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.4.1'


    implementation "androidx.room:room-runtime:$roomVersion"
    kapt "androidx.room:room-compiler:$roomVersion"
    implementation "androidx.room:room-ktx:$roomVersion"

     implementation "io.grpc:grpc-okhttp:${grpcVersion}"
    implementation "io.grpc:grpc-protobuf-lite:${grpcVersion}"
    implementation "io.grpc:grpc-stub:${grpcVersion}"
    implementation 'org.apache.tomcat:annotations-api:6.0.53'
//    implementation 'com.google.guava:guava:33.2.1-jre'
//    implementation 'com.google.guava:listenablefuture:1.0'


    implementation 'com.squareup.okhttp3:okhttp:3.14.8'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.14.8'
    implementation 'com.squareup.retrofit2:retrofit:2.3.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.3.0'
    implementation 'com.squareup.retrofit2:adapter-rxjava:2.0.2'
    implementation 'io.reactivex:rxjava:1.1.1'





}

publishing {
    // 配置maven 仓库
    repositories { RepositoryHandler handler->
        handler.mavenLocal()  // 发布到默认的 本地maven 仓库 ，路径： USER_HOME/.m2/repository/


        //带有aar和pom等打包文件的输出目录，project.projectDir.parent：表示输出到当前项目的根目录
//        project.projectDir.parent

        // 仓库用户名密码
//         handler.maven { MavenArtifactRepository mavenArtifactRepository ->
//             // maven 仓库地址
//             url 'https://github.com/kan137g/eSIM/'
//             // 访问仓库的 账号和密码
//             credentials {
//                 username = "kan137g"
//                 password = "123456"
//             }
//         }


    }
    // 配置发布产物
    publications {PublicationContainer publication->
        // 名称可以随便定义，这里定义成 maven，是因为我的 aar 包是发布到 maven 仓库的，所以这里为了见名知义，定义成了 maven


        // 任务名称：maven
        maven(MavenPublication) {// 容器可配置的信息 MavenPublication

            // 依赖 bundleReleaseAar 任务，并上传其产出的aar
//            afterEvaluate { artifact(tasks.getByName("bundleReleaseAar")) }// 方式一：生成aar包
            artifact ".\\libs\\droidlib-release.aar" // 方式二：指定生成的aar路径
            //组Id，即远程依赖库的包名
            groupId = "com.akq.sdk"
            //远程依赖库的库名
            artifactId = "eSIM"
            //版本号
            version = "1.0.8.2"

            // pom文件中声明依赖，从而传递到使用方
            pom.withXml {
                def dependenciesNode = asNode().appendNode('dependencies')
                configurations.implementation.allDependencies.each {
                    // 避免出现空节点或 artifactId=unspecified 的节点
                    if (it.group != null 
//                            && !it.group.contains("androidx")// androidx依赖包包含了guava
                            &&(it.name != null
                            &&  !it.name.contains("guava") // 客户说不需要这个依赖包
//                            &&  !it.name.contains("grpc") // 这个依赖包包含了guava
//                            &&  !it.name.contains("grpc") // 这个依赖包包含了guava
                            && "listenablefuture" != it.name // 这个依赖包包含了guava
                            && "failureaccess" != it.name // 这个依赖包包含了guava
                            && "unspecified" != it.name
                    )
                            && it.version != null) {
                        println "dependency=${it.toString()}"
                        def dependencyNode = dependenciesNode.appendNode('dependency')
                        dependencyNode.appendNode('groupId', it.group)
                        dependencyNode.appendNode('artifactId', it.name)
                        dependencyNode.appendNode('version', it.version)
                        dependencyNode.appendNode('scope', 'implementation')
                    }
                }
            }


        }
    }

}


